AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  troubles-service

  Sample SAM Template for troubles-service

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
Parameters:
  TableName:
    Type: String
    Default: TroubleTable
    Description: The name of the DynamoDB table to be created.
    MinLength: 1
Resources:

  TroublesApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: TroublesApi
      StageName: Prod
      Cors:
        AllowMethods: "'OPTIONS,GET,POST'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !ImportValue CognitoUserPoolArn
            Identity:
              Header: Authorization
  TroublesListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: troubles/ListTroubles/
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TroubleTable
      Layers:
        - !ImportValue RequirementsLayerVersion
      Events:
        getTroubles:
          Type: Api
          Properties:
            RestApiId: !Ref TroublesApi
            Path: /troubles
            Method: get
            Auth:
              Authorizer: CognitoAuthorizer
  TroublesPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: troubles/CreateTrouble/
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TroubleTable
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Layers:
        - !ImportValue RequirementsLayerVersion
      Events:
        createTrouble:
          Type: Api
          Properties:
            RestApiId: !Ref TroublesApi
            Path: /troubles
            Method: post
            Auth:
              Authorizer: CognitoAuthorizer
  TroubleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Ref TableName
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  TroublesApi:
    Description: "API Gateway endpoint URL for Prod stage for Troubles API"
    Value: !Sub "https://${TroublesApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/troubles/"
  TroublesListFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt TroublesListFunction.Arn
  TroublesPostFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt TroublesPostFunction.Arn
  TroubleTable:
    Description: "TroubleTable DynamoDB Table ARN"
    Value: !GetAtt TroubleTable.Arn
  TroubleTableName:
    Description: "TroubleTable DynamoDB Table Name"
    Value: !Ref TroubleTable
